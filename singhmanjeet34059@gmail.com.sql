--SQL Advance Case Study


--Q1--BEGIN 
SELECT DISTINCT [State]
FROM FACT_TRANSACTIONS AS T
INNER JOIN DIM_LOCATION AS L
ON T.IDLocation=L.IDLocation
INNER JOIN DIM_MODEL AS M
ON T.IDModel=M.IDModel
   WHERE
   [Date] BETWEEN '01-01-2005' AND GETDATE()

--Q1--END

--Q2--BEGIN
SELECT TOP 1 [State]
FROM FACT_TRANSACTIONS AS T
INNER JOIN DIM_LOCATION AS L
ON T.IDLocation=L.IDLocation
INNER JOIN DIM_MODEL AS M1
ON T.IDModel=M1.IDModel
INNER JOIN DIM_MANUFACTURER AS M2
ON M1.IDManufacturer=M2.IDManufacturer
WHERE L.Country='US' AND M2.Manufacturer_Name='Samsung'
GROUP BY [State]
ORDER BY SUM(Quantity) DESC

--Q2--END

--Q3--BEGIN 

SELECT IDModel,ZipCode,[State],Count(IDCustomer) AS NO_TN
FROM FACT_TRANSACTIONS AS T
INNER JOIN DIM_LOCATION AS L
ON T.IDLocation=L.IDLocation
GROUP BY IDModel,ZipCode,[State]

--Q3--END

--Q4--BEGIN
SELECT TOP 1 Model_Name,IDModel ,MIN(Unit_price) AS MIN_PRICE
FROM DIM_MODEL
GROUP BY Model_Name,IDModel
ORDER BY MIN_PRICE

--Q4--END

--Q5--BEGIN
WITH TOP5_MFR
AS (
      SELECT TOP 5 M2.Manufacturer_Name
      FROM FACT_TRANSACTIONS AS T 
      INNER JOIN DIM_MODEL AS M1 ON T.IDModel=M1.IDModel
      INNER JOIN DIM_MANUFACTURER AS M2 ON M1.IDManufacturer=M2.IDManufacturer
      GROUP BY M2.Manufacturer_Name
      ORDER BY SUM(Quantity) DESC
   )
        SELECT Manufacturer_Name,Model_Name, AVG(Totalprice) AS AVGPRICE
        FROM FACT_Transactions AS T
        INNER JOIN DIM_MODEL AS M ON T.IDModel=M.IDModel
        INNER JOIN DIM_MANUFACTURER AS M0 ON M.IDManufacturer=M0.IDManufacturer
        WHERE Manufacturer_Name IN (SELECT * FROM TOP5_MFR)
        GROUP BY Manufacturer_Name,Model_Name 
        ORDER BY AVGPRICE DESC

--Q5--END

--Q6--BEGIN
SELECT Customer_Name,AVG(TotalPrice) AS AVG_SPENT
FROM DIM_CUSTOMER AS C
INNER JOIN FACT_TRANSACTIONS AS T 
ON C.IDCustomer=T.IDCustomer
WHERE YEAR(Date)='2009'
GROUP BY Customer_Name
HAVING AVG(TotalPrice) >500

--Q6--END
	
--Q7--BEGIN 
WITH TOP52008
AS(
SELECT TOP 5 T.IDModel,Model_Name
FROM FACT_TRANSACTIONS AS T
INNER JOIN DIM_MODEL AS M
ON T.IDModel=M.IDModel	
WHERE YEAR(Date) = '2008'
GROUP BY T.IDModel,Model_Name
ORDER BY SUM(Quantity) DESC
),
TOP52009
AS (
SELECT TOP 5 T.IDModel,Model_Name
FROM FACT_TRANSACTIONS AS T
INNER JOIN DIM_MODEL AS M
ON T.IDModel=M.IDModel
WHERE YEAR(Date)='2009'
GROUP BY T.IDModel,Model_Name
ORDER BY SUM(Quantity) DESC
),
TOP52010
AS (
SELECT TOP 5 T.IDModel,Model_Name
FROM FACT_TRANSACTIONS AS T
INNER JOIN DIM_MODEL AS M
ON T.IDModel=M.IDModel
WHERE YEAR(Date)='2010'
GROUP BY T.IDModel,Model_Name
ORDER BY SUM(Quantity) DESC
)

SELECT * FROM TOP52008
INTERSECT
SELECT * FROM TOP52009
INTERSECT
SELECT * FROM TOP52010

--Q7--END	
--Q8--BEGIN
/
WITH SALES1
AS
      (
        SELECT Manufacturer_Name,YEAR(Date) AS YEARS,
               DENSE_RANK() OVER (PARTITION BY YEAR(DATE) ORDER BY SUM(TotalPrice) DESC) AS RANK
        FROM FACT_TRANSACTIONS AS T
        INNER JOIN DIM_MODEL AS M ON T.IDModel=M.IDModel
        INNER JOIN DIM_MANUFACTURER AS M1 ON M.IDManufacturer=M1.IDManufacturer
		GROUP BY Manufacturer_Name,YEAR(Date)
		
)
      SELECT Manufacturer_Name,YEARS
      FROM SALES1
      WHERE YEARS IN ('2009','2010') AND RANK=2
      
--Q8--END
--Q9--BEGIN
SELECT Manufacturer_Name
FROM FACT_TRANSACTIONS AS T
INNER JOIN DIM_MODEL AS M1
ON T.IDModel=M1.IDModel
INNER JOIN DIM_MANUFACTURER AS M2
ON M1.IDManufacturer=M2.IDManufacturer
WHERE YEAR(Date)='2010'
EXCEPT
SELECT Manufacturer_Name
FROM FACT_TRANSACTIONS AS T
INNER JOIN DIM_MODEL AS M1
ON T.IDModel=M1.IDModel
INNER JOIN DIM_MANUFACTURER AS M2
ON M1.IDManufacturer=M2.IDManufacturer
WHERE YEAR(Date)='2009'

--Q9--END

--Q10--BEGIN
WITH TOP10
AS (
SELECT *
FROM (
      SELECT  IDCustomer,YEAR(Date)AS YEARS,AVG(TotalPrice) AS AVG_PR,AVG(Quantity) AS AVG_QTY,
      DENSE_RANK () OVER (PARTITION BY YEAR(Date) ORDER BY AVG(TotalPrice) 
	  DESC) AS RANKS
      FROM FACT_TRANSACTIONS
      GROUP BY IDCustomer,YEAR(Date)
    ) AS X
	WHERE RANKS<11
),
LAGVAL
AS (
       SELECT IDCustomer,YEARS,AVG_QTY,AVG_PR, LAG(AVG_PR,1) 
	   OVER (PARTITION BY IDCustomer ORDER BY IDCustomer,YEARS) AS PREV_VAL
	   FROM TOP10
	   ),
CHANGEPERCENT
AS (
     SELECT *,(AVG_PR-PREV_VAL)*100/PREV_VAL AS YOYCHANGEPERCENT
	 FROM LAGVAL)
SELECT IDCustomer,Years,AVG_QTY,AVG_PR,YOYCHANGEPERCENT
FROM CHANGEPERCENT

--Q10--END
	